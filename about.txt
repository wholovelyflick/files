using System;
using System.CodeDom.Compiler;
using System.ComponentModel;
using System.Diagnostics;
using System.Diagnostics.CodeAnalysis;
using System.Globalization;
using System.Windows;
using System.Windows.Controls;
using System.Windows.Documents;
using System.Windows.Markup;
using System.Windows.Navigation;
using BlueStacks.Common;

namespace BlueStacks.BlueStacksUI
{
	// Token: 0x020000DB RID: 219
	public class AboutSettingsControl : UserControl, IComponentConnector
	{
		// Token: 0x06000E95 RID: 3733 RVA: 0x0005F990 File Offset: 0x0005DB90
		public AboutSettingsControl(MainWindow window, SettingsWindow _)
		{
			this.ParentWindow = window;
			this.InitializeComponent();
			base.Visibility = Visibility.Hidden;
			base.Loaded += this.AboutSettingsControl_Loaded;
			this.mVersionLabel.Content = "SHADOW";
			this.mVersionLabel.FontSize = 30.0;
			this.mVersionLabel.Margin = new Thickness(0.0, -20.0, 0.0, 0.0);
			this.mSupportLabel.SetValue(ContentControl.ContentProperty, "");
			this.mWebsiteLabel.SetValue(ContentControl.ContentProperty, "");
			this.mSupportMailLabel.SetValue(ContentControl.ContentProperty, "");
		}

		// Token: 0x06000E96 RID: 3734 RVA: 0x0005FBDC File Offset: 0x0005DDDC
		private void AboutSettingsControl_Loaded(object sender, RoutedEventArgs e)
		{
			if (FeatureManager.Instance.IsCustomUIForDMMSandbox)
			{
				this.ContactInfoGrid.Visibility = Visibility.Hidden;
			}
			if (RegistryManager.Instance.InstallationType == InstallationTypes.GamingEdition)
			{
				this.mPoweredByBSGrid.Visibility = Visibility.Visible;
				this.mBSIconAndNameGrid.Visibility = Visibility.Visible;
			}
			this.mSupportEMailHyperlink.Inlines.Clear();
			this.mSupportEMailHyperlink.Inlines.Add("");
			this.mSupportEMailHyperlink.NavigateUri = new Uri("https://t.me/wholovelyflickopt");
			this.mlink1.Inlines.Clear();
			this.mlink1.Inlines.Add("wholovelyflick");
			this.mlink1.NavigateUri = new Uri("https://t.me/wholovelyflickopt");
			this.mlink2.Inlines.Clear();
			this.mlink2.Inlines.Add("Buy here");
			this.mlink2.NavigateUri = new Uri("https://t.me/wholovelyflick");
			this.HandleUpdateStateGridVisibility(BlueStacksUpdater.SUpdateState);
			BlueStacksUpdater.StateChanged -= this.BlueStacksUpdater_StateChanged;
			BlueStacksUpdater.StateChanged += this.BlueStacksUpdater_StateChanged;
		}

		// Token: 0x06000E97 RID: 3735 RVA: 0x0005FCA1 File Offset: 0x0005DEA1
		private void BlueStacksUpdater_StateChanged()
		{
			this.HandleUpdateStateGridVisibility(BlueStacksUpdater.SUpdateState);
		}

		// Token: 0x06000E98 RID: 3736 RVA: 0x0005FCB0 File Offset: 0x0005DEB0
		private void HandleUpdateStateGridVisibility(BlueStacksUpdater.UpdateState state)
		{
			base.Dispatcher.Invoke(new Action(delegate()
			{
				switch (state)
				{
				case BlueStacksUpdater.UpdateState.NO_UPDATE:
					this.mUpdateInfoGrid.Visibility = Visibility.Collapsed;
					this.mCheckUpdateBtn.HorizontalAlignment = HorizontalAlignment.Left;
					this.mCheckUpdateBtn.Visibility = Visibility.Visible;
					BlueStacksUIBinding.Bind(this.mCheckUpdateBtn, "STRING_CHECK_UPDATES");
					this.mStatusLabel.Visibility = Visibility.Collapsed;
					this.mCheckingGrid.Visibility = Visibility.Collapsed;
					return;
				case BlueStacksUpdater.UpdateState.UPDATE_AVAILABLE:
					this.mUpdateInfoGrid.Visibility = Visibility.Visible;
					BlueStacksUIBinding.Bind(this.bodyLabel, "STRING_UPDATE_AVAILABLE");
					this.mDetailedChangeLogs.NavigateUri = new Uri(BlueStacksUpdater.sBstUpdateData.DetailedChangeLogsUrl);
					this.mLabelVersion.Content = "v" + BlueStacksUpdater.sBstUpdateData.EngineVersion;
					this.mCheckUpdateBtn.HorizontalAlignment = HorizontalAlignment.Right;
					this.mCheckUpdateBtn.Visibility = Visibility.Visible;
					BlueStacksUIBinding.Bind(this.mCheckUpdateBtn, "STRING_DOWNLOAD_UPDATE");
					this.mStatusLabel.Visibility = Visibility.Collapsed;
					this.mCheckingGrid.Visibility = Visibility.Collapsed;
					return;
				case BlueStacksUpdater.UpdateState.DOWNLOADING:
					this.mUpdateInfoGrid.Visibility = Visibility.Visible;
					BlueStacksUIBinding.Bind(this.bodyLabel, "STRING_DOWNLOADING_UPDATE");
					this.mDetailedChangeLogs.NavigateUri = new Uri(BlueStacksUpdater.sBstUpdateData.DetailedChangeLogsUrl);
					this.mLabelVersion.Content = "v" + BlueStacksUpdater.sBstUpdateData.EngineVersion;
					this.mCheckUpdateBtn.Visibility = Visibility.Collapsed;
					this.mStatusLabel.Visibility = Visibility.Collapsed;
					this.mCheckingGrid.Visibility = Visibility.Collapsed;
					return;
				case BlueStacksUpdater.UpdateState.DOWNLOADED:
					this.mUpdateInfoGrid.Visibility = Visibility.Visible;
					BlueStacksUIBinding.Bind(this.bodyLabel, "STRING_UPDATES_READY_TO_INSTALL");
					this.mDetailedChangeLogs.NavigateUri = new Uri(BlueStacksUpdater.sBstUpdateData.DetailedChangeLogsUrl);
					this.mLabelVersion.Content = "v" + BlueStacksUpdater.sBstUpdateData.EngineVersion;
					this.mCheckUpdateBtn.HorizontalAlignment = HorizontalAlignment.Right;
					this.mCheckUpdateBtn.Visibility = Visibility.Visible;
					BlueStacksUIBinding.Bind(this.mCheckUpdateBtn, "STRING_INSTALL_UPDATE");
					this.mStatusLabel.Visibility = Visibility.Collapsed;
					this.mCheckingGrid.Visibility = Visibility.Collapsed;
					return;
				default:
					return;
				}
			}), new object[0]);
		}

		// Token: 0x06000E99 RID: 3737 RVA: 0x0005FCEF File Offset: 0x0005DEEF
		private void ShowCheckingForUpdateGrid()
		{
			base.Dispatcher.Invoke(new Action(delegate()
			{
				this.mUpdateInfoGrid.Visibility = Visibility.Collapsed;
				this.mCheckUpdateBtn.Visibility = Visibility.Collapsed;
				this.mStatusLabel.Visibility = Visibility.Collapsed;
				this.mCheckingGrid.Visibility = Visibility.Visible;
			}), new object[0]);
		}

		// Token: 0x06000E9A RID: 3738 RVA: 0x0005FD0F File Offset: 0x0005DF0F
		private void ShowLatestVersionGrid()
		{
			base.Dispatcher.Invoke(new Action(delegate()
			{
				this.mUpdateInfoGrid.Visibility = Visibility.Collapsed;
				this.mCheckUpdateBtn.Visibility = Visibility.Collapsed;
				this.mStatusLabel.Visibility = Visibility.Visible;
				BlueStacksUIBinding.Bind(this.mStatusLabel, "STRING_LATEST_VERSION", "");
				this.mCheckingGrid.Visibility = Visibility.Collapsed;
			}), new object[0]);
		}

		// Token: 0x06000E9B RID: 3739 RVA: 0x0005FD2F File Offset: 0x0005DF2F
		private void ShowInternetConnectionErrorGrid()
		{
		}

		// Token: 0x06000E9C RID: 3740 RVA: 0x0005FD50 File Offset: 0x0005DF50
		private void mCheckUpdateBtn_Click(object sender, RoutedEventArgs e)
		{
			if (string.Equals(this.mCheckUpdateBtn.Content.ToString(), LocaleStrings.GetLocalizedString("STRING_DOWNLOAD_UPDATE", ""), StringComparison.InvariantCulture))
			{
				BlueStacksUpdater.DownloadNow(BlueStacksUpdater.sBstUpdateData, false);
				ClientStats.SendBluestacksUpdaterUIStatsAsync(ClientStatsEvent.SettingDownloadUpdate, "");
				return;
			}
			if (string.Equals(this.mCheckUpdateBtn.Content.ToString(), LocaleStrings.GetLocalizedString("STRING_INSTALL_UPDATE", ""), StringComparison.InvariantCulture))
			{
				this.ParentWindow.ShowInstallPopup();
				ClientStats.SendBluestacksUpdaterUIStatsAsync(ClientStatsEvent.SettingInstallUpdate, "");
				return;
			}
			if (string.Equals(this.mCheckUpdateBtn.Content.ToString(), LocaleStrings.GetLocalizedString("STRING_CHECK_UPDATES", ""), StringComparison.InvariantCulture) || string.Equals(this.mCheckUpdateBtn.Content.ToString(), LocaleStrings.GetLocalizedString("STRING_RETRY_CONNECTION_ISSUE_TEXT1", ""), StringComparison.InvariantCulture))
			{
				this.ShowCheckingForUpdateGrid();
				BlueStacksUpdater.sCheckUpdateBackgroundWorker.RunWorkerCompleted -= this.HandleCheckForUpdateResult;
				BlueStacksUpdater.sCheckUpdateBackgroundWorker.RunWorkerCompleted += this.HandleCheckForUpdateResult;
				BlueStacksUpdater.SetupBlueStacksUpdater(this.ParentWindow, false);
				ClientStats.SendBluestacksUpdaterUIStatsAsync(ClientStatsEvent.SettingCheckUpdate, "");
			}
		}

		// Token: 0x06000E9D RID: 3741 RVA: 0x0005FE7C File Offset: 0x0005E07C
		private void HandleCheckForUpdateResult(object sender, RunWorkerCompletedEventArgs e)
		{
			if (BlueStacksUpdater.sBstUpdateData.IsUpdateAvailble)
			{
				this.HandleUpdateStateGridVisibility(BlueStacksUpdater.SUpdateState);
				ClientStats.SendBluestacksUpdaterUIStatsAsync(ClientStatsEvent.SettingUpdateAvailable, "");
				return;
			}
			if (BlueStacksUpdater.sBstUpdateData.IsTryAgain)
			{
				this.ShowInternetConnectionErrorGrid();
				return;
			}
			this.ShowLatestVersionGrid();
			ClientStats.SendBluestacksUpdaterUIStatsAsync(ClientStatsEvent.SettingUpdateNotAvailable, "");
		}

		// Token: 0x06000E9E RID: 3742 RVA: 0x0005FED8 File Offset: 0x0005E0D8
		private void Hyperlink_RequestNavigate(object sender, RequestNavigateEventArgs e)
		{
			BlueStacksUIUtils.OpenUrl(e.Uri.OriginalString);
			e.Handled = true;
		}

		// Token: 0x06000E9F RID: 3743 RVA: 0x0005FEF1 File Offset: 0x0005E0F1
		private void mTermsOfUseLink_Loaded(object sender, RoutedEventArgs e)
		{
			this.mTermsOfUseLink.Inlines.Clear();
		}

		// Token: 0x06000EA0 RID: 3744 RVA: 0x0005FF24 File Offset: 0x0005E124
		[DebuggerNonUserCode]
		[GeneratedCode("PresentationBuildTasks", "4.0.0.0")]
		public void InitializeComponent()
		{
			if (this._contentLoaded)
			{
				return;
			}
			this._contentLoaded = true;
			Uri resourceLocator = new Uri("/Bluestacks;component/controls/settingswindows/aboutsettingscontrol.xaml", UriKind.Relative);
			Application.LoadComponent(this, resourceLocator);
		}

		// Token: 0x06000EA1 RID: 3745 RVA: 0x0005FF54 File Offset: 0x0005E154
		[DebuggerNonUserCode]
		[GeneratedCode("PresentationBuildTasks", "4.0.0.0")]
		[EditorBrowsable(EditorBrowsableState.Never)]
		[SuppressMessage("Microsoft.Design", "CA1033:InterfaceMethodsShouldBeCallableByChildTypes")]
		[SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
		[SuppressMessage("Microsoft.Performance", "CA1800:DoNotCastUnnecessarily")]
		void IComponentConnector.Connect(int connectionId, object target)
		{
			switch (connectionId)
			{
			case 1:
				this.mPoweredByBSGrid = (Grid)target;
				this.mPoweredByBSGrid.Margin = new Thickness(0.0, 500.0, 0.0, 0.0);
				return;
			case 2:
				this.mBSIconAndNameGrid = (Grid)target;
				this.mBSIconAndNameGrid.Visibility = Visibility.Collapsed;
				return;
			case 3:
				this.mProductTextGrid = (Grid)target;
				this.mProductTextGrid.Visibility = Visibility.Collapsed;
				return;
			case 4:
				this.mVersionLabel = (Label)target;
				this.mVersionLabel.Visibility = Visibility.Collapsed;
				return;
			case 5:
				this.mUpdateInfoGrid = (Grid)target;
				return;
			case 6:
				this.bodyLabel = (Label)target;
				return;
			case 7:
				this.mLabelVersion = (Label)target;
				this.mLabelVersion.Visibility = Visibility.Collapsed;
				return;
			case 8:
				this.mDetailedChangeLogs = (Hyperlink)target;
				this.mDetailedChangeLogs.RequestNavigate += this.Hyperlink_RequestNavigate;
				return;
			case 9:
				this.mCheckUpdateBtn = (CustomButton)target;
				this.mCheckUpdateBtn.Click += this.mCheckUpdateBtn_Click;
				return;
			case 10:
				this.mStatusLabel = (TextBlock)target;
				return;
			case 11:
				this.mCheckingGrid = (Grid)target;
				return;
			case 12:
				this.ContactInfoGrid = (Grid)target;
				this.ContactInfoGrid.Margin = new Thickness(0.0, -660.0, 0.0, 100.0);
				return;
			case 13:
				this.mWebsiteLabel = (Label)target;
				this.mWebsiteLabel.Visibility = Visibility.Collapsed;
				return;
			case 14:
				((Hyperlink)target).RequestNavigate += this.Hyperlink_RequestNavigate;
				((Hyperlink)target).Inlines.Clear();
				((Hyperlink)target).Inlines.Add("text 2");
				this.mlink1 = (Hyperlink)target;
				return;
			case 15:
				this.mSupportLabel = (Label)target;
				return;
			case 16:
				((Hyperlink)target).RequestNavigate += this.Hyperlink_RequestNavigate;
				((Hyperlink)target).Inlines.Clear();
				((Hyperlink)target).Inlines.Add("text 1");
				this.mlink2 = (Hyperlink)target;
				return;
			case 17:
				this.mSupportMailLabel = (Label)target;
				return;
			case 18:
				this.mSupportEMailHyperlink = (Hyperlink)target;
				this.mSupportEMailHyperlink.RequestNavigate += this.Hyperlink_RequestNavigate;
				return;
			case 19:
				this.mTermsOfUse = (TextBlock)target;
				return;
			case 20:
				this.mTermsOfUseLink = (Hyperlink)target;
				this.mTermsOfUseLink.RequestNavigate += this.Hyperlink_RequestNavigate;
				this.mTermsOfUseLink.Loaded += this.mTermsOfUseLink_Loaded;
				return;
			default:
				this._contentLoaded = true;
				return;
			}
		}

		// Token: 0x040008DF RID: 2271
		private MainWindow ParentWindow;

		// Token: 0x040008E0 RID: 2272
		[SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
		internal Grid mPoweredByBSGrid;

		// Token: 0x040008E1 RID: 2273
		[SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
		internal Grid mBSIconAndNameGrid;

		// Token: 0x040008E2 RID: 2274
		[SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
		internal Grid mProductTextGrid;

		// Token: 0x040008E3 RID: 2275
		[SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
		internal Label mVersionLabel;

		// Token: 0x040008E4 RID: 2276
		[SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
		internal Grid mUpdateInfoGrid;

		// Token: 0x040008E5 RID: 2277
		[SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
		internal Label bodyLabel;

		// Token: 0x040008E6 RID: 2278
		[SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
		internal Label mLabelVersion;

		// Token: 0x040008E7 RID: 2279
		[SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
		internal Hyperlink mDetailedChangeLogs;

		// Token: 0x040008E8 RID: 2280
		[SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
		internal CustomButton mCheckUpdateBtn;

		// Token: 0x040008E9 RID: 2281
		[SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
		internal TextBlock mStatusLabel;

		// Token: 0x040008EA RID: 2282
		[SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
		internal Grid mCheckingGrid;

		// Token: 0x040008EB RID: 2283
		[SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
		internal Grid ContactInfoGrid;

		// Token: 0x040008EC RID: 2284
		[SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
		internal Label mWebsiteLabel;

		// Token: 0x040008ED RID: 2285
		[SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
		internal Label mSupportLabel;

		// Token: 0x040008EE RID: 2286
		[SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
		internal Label mSupportMailLabel;

		// Token: 0x040008EF RID: 2287
		[SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
		internal Hyperlink mSupportEMailHyperlink;

		// Token: 0x040008F0 RID: 2288
		[SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
		internal TextBlock mTermsOfUse;

		// Token: 0x040008F1 RID: 2289
		[SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
		internal Hyperlink mTermsOfUseLink;

		// Token: 0x040008F2 RID: 2290
		private bool _contentLoaded;
	}
}
